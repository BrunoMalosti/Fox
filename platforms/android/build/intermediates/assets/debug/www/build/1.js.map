{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/email.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD,IAAa,uBAAuB;IAApC;IAAsC,CAAC;IAAD,8BAAC;AAAD,CAAC;AAA1B,uBAAuB;IARnC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,0EAAiB;SAClB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;SAC5C;KACF,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;ACXpC;AAAA;IAAA;IAWA,CAAC;IAVU,sBAAO,GAAd,UAAe,OAAoB;QAC/B,IAAM,EAAE,GAAG,4DAA4D;aAClE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC;YACH,cAAc,EAAE,IAAI;SACvB,CAAC;IACN,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AAMnB;AAC6C;AACX;AACD;AAMxD,IAAa,iBAAiB;IAE5B,2BAAmB,OAAsB,EAChC,YAA0B,EAAS,SAA0B,EACpE,WAAwB;QAFP,YAAO,GAAP,OAAO,CAAe;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAAS,cAAS,GAAT,SAAS,CAAiB;QAEpE,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ;oBACnD,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1B,CAAC,CAAC;IACL,CAAC;IAGD,yCAAa,GAAb;QAAA,iBAuBC;QAtBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,8BAA4B,IAAI,CAAC,iBAAiB,CAAC,KAAO,CAAC,CAAC;QAC1E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,KAAK,GAAW,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAI;gBAC9C,IAAM,KAAK,GAAU,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACzC,OAAO,EAAE,4CAA4C;oBACrD,OAAO,EAAE,CAAC;4BACR,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,cAAQ,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC,CAAC;yBACtC,CAAC;iBACH,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE;YACjB,CAAC,EAAE,eAAK;gBACN,IAAM,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACvC,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;iBAC1C,CAAC,CAAC;gBACH,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAIH,wBAAC;AAAD,CAAC;AAvCY,iBAAiB;IAL7B,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;OACG;KACnC,CAAC;0JAG4B,CAAa;QAClB,oEAAY,CAAmC;QACvD,WAAW;AAmC3B;SAvCY,iBAAiB,gB","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ResetPasswordPage } from './reset-password';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ResetPasswordPage),\r\n  ],\r\n})\r\nexport class ResetPasswordPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms';\r\nexport class EmailValidator {\r\n    static isValid(control: FormControl) {\r\n        const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\r\n            .test(control.value);\r\n        if (re) {\r\n            return null;\r\n        }\r\n        return {\r\n            \"invalidEmail\": true\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\r\nimport {\r\n  IonicPage,\r\n  NavController,\r\n  Alert,\r\n  AlertController\r\n} from 'ionic-angular';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { AuthProvider } from '../../providers/auth/auth';\r\nimport { EmailValidator } from '../../validators/email';\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-reset-password',\r\n  templateUrl: 'reset-password.html',\r\n})\r\nexport class ResetPasswordPage {\r\n  public resetPasswordForm: FormGroup;\r\n  constructor(public navCtrl: NavController,\r\n    public authProvider: AuthProvider, public alertCtrl: AlertController,\r\n    formBuilder: FormBuilder) {\r\n    this.resetPasswordForm = formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required,\r\n      EmailValidator.isValid])]\r\n    });\r\n  }\r\n\r\n\r\n  resetPassword(): void {\r\n    if (!this.resetPasswordForm.valid) {\r\n      console.log(`Form isn't valid, value: ${this.resetPasswordForm.value}`);\r\n    } else {\r\n      const email: string = this.resetPasswordForm.value.email;\r\n      this.authProvider.resetPassword(email).then(user => {\r\n        const alert: Alert = this.alertCtrl.create({\r\n          message: \"Check your email for a password reset link\",\r\n          buttons: [{\r\n            text: \"Ok\",\r\n            role: 'cancel',\r\n            handler: () => { this.navCtrl.pop() }\r\n          }]\r\n        });\r\n        alert.present()\r\n      }, error => {\r\n        const errorAlert = this.alertCtrl.create({\r\n          message: error.message,\r\n          buttons: [{ text: \"Ok\", role: \"cancel\" }]\r\n        });\r\n        errorAlert.present();\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}